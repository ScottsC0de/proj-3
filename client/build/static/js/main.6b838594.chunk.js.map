{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/SignupForm.js","components/LoginForm.js","components/navbar.js","utils/queries.js","utils/localStorage.js","pages/SavedImages.js","pages/SearchedImages.js","components/ImageList.js","pages/LikePhoto.js","pages/LikeButton.js","pages/AllSavedImages.js","pages/UserList.js","components/CommentList.js","components/CommentForm.js","pages/SingleUser.js","components/picturePost.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_IMAGE","_templateObject3","REMOVE_IMAGE","_templateObject4","ADD_COMMENT","_templateObject5","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","SignupForm","_useState","useState","username","email","password","_useState2","_slicedToArray","userFormData","setUserFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","_useMutation2","addUser","handleInputChange","error","event","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","Auth","login","t0","console","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","loginUser","_yield$loginUser","AppNavbar","showModal","setShowModal","_useState4","useLocation","Navbar","bg","expand","Container","fluid","Toggle","Collapse","id","Nav","className","pathname","Link","as","to","loggedIn","onClick","logout","Modal","size","onHide","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","handleModalClose","SignUpForm","GET_ME","QUERY_USERS","QUERY_ALL_IMAGES","QUERY_SINGLE_USER","removeImageSrc","imageSrc","savedImageSrcs","JSON","parse","updatedSavedImageSrcs","filter","savedImageSrc","stringify","SavedImages","_userData$savedImages","_userData$savedImages2","_useQuery","useQuery","loading","userData","me","removeImage","handleDeleteImage","imageId","_yield$removeImage","abrupt","Jumbotron","savedImages","length","concat","map","photo","Card","Img","src","alt","title","thumbnailheight","thumbnailwidth","caption","dotenv","SearchedImages","searchedImages","setSearchedImages","searchInput","setSearchInput","prevSearchInput","setPrevSearchInput","_useState7","_useState8","setSavedImageSrcs","saveImage","useEffect","imageSrcArr","apiKey","response","_yield$response$json","imageData","process","fetch","ok","Error","json","photos","server","secret","handleSaveImage","_ref2","_callee2","imageToSave","_yield$saveImage","_context2","log","find","_toConsumableArray","_x2","Row","Col","xs","md","e","some","ImageList","users","user","style","fontSize","_id","Photo","props","LikeButton","liked","setLiked","buttonStyle","backgroundColor","color","borderRadius","padding","border","cursor","userId","photoId","AllSavedImages","allImages","i","push","flat","images","alert","onclick","AllSavedUsers","CommentsList","comments","comment","CommentForm","setComment","addComment","message","SingleUser","_user$savedImages","_user$savedImages2","_user$comments","useParams","PicturePost","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","UserList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6b838594.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\n\n// mutation for logged in user\nexport const LOGIN_USER = gql`\n  mutation loginUser($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        imageCount\n      savedImages {\n        imageId\n        title\n        caption\n        src\n      }\n      }\n    }\n  }\n`;\n\n// mutation to add user\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n        imageCount\n      savedImages {\n        imageId\n        title\n        caption\n        src\n      }\n      }\n    }\n  }\n`;\n\nexport const SAVE_IMAGE = gql`\n mutation SaveImage($imageId: String!, $title: String!, $imageSrc: String, $caption: String!) {\n  saveImage( imageId: $imageId, title: $title, src: $imageSrc, caption: $caption) {\n    _id\n    username\n    email\n    imageCount\n    savedImages {\n      caption\n      imageId\n      src\n      title\n    }\n  }\n}\n`;\n\nexport const REMOVE_IMAGE = gql`\n  mutation removeImage($imageId: String!) {\n    removeImage(imageId: $imageId) {\n      _id\n      username\n      imageCount\n      savedImages {\n        imageId\n        title\n        caption\n        src\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($userId: ID!, $comment: String!) {\n    addComment(userId: $userId, comment: $comment) {\n      _id\n      name\n      comments\n    }\n  }\n`;\n\n\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { createUser } from \"../utils/API\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  //use mutations\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\n\n// importing mutations\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  // initialize mutation\n  // const [loginUser, { error }] = useMutation(LOGIN_USER);\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.login.token);\n\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link, useLocation, Route } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const location = useLocation();\n  const handleSearchSubmit = (searchText) => {\n\n  }\n\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n            {location.pathname !== \"/\" ? <Nav.Link as={Link} to='/'>\n              Home</Nav.Link> : ''}\n\n\n              {/* if user is logged in show saved images and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                {location.pathname !== \"/saved\" ?\n                  <Nav.Link as={Link} to='/saved'>\n                    Your Images\n                  </Nav.Link> : ''}\n                  {location.pathname !== \"/allsaved\" ?\n                  <Nav.Link as={Link} to='/allsaved'>\n                    Everyone's Images\n                  </Nav.Link> : ''}\n                  {location.pathname !== \"/allusers\" ?\n                  <Nav.Link as={Link} to='/allusers'>\n                    Images by User\n                  </Nav.Link> : ''}\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import gql from \"graphql-tag\";\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      imageCount\n      savedImages {\n        imageId\n        title\n        caption\n        src\n      }\n    }\n  }\n`;\n\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      username\n      email\n      imageCount\n      savedImages {\n        caption\n        imageId\n        src\n        title\n      }\n    }\n  }\n`;\n\n\nexport const QUERY_ALL_IMAGES = gql`\n  query allUsers {\n    users\n{      savedImages {\n        caption\n        imageId\n        src\n        title\n      }\n    }}\n\n`;\n\nexport const QUERY_SINGLE_USER = gql`\n  query singleUser($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      username\n      email\n      imageCount\n      savedImages {\n        caption\n        imageId\n        src\n        title\n      }\n    }\n  }\n`;\n\n// export const QUERY_COMMENTS = gql`\n//   query getComments {\n//     comments {\n//       _id\n//       commentText\n//       commentAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const QUERY_SINGLE_COMMENT = gql`\n//   query getSingleComment($imageId: ID!) {\n//     thought(imageId: $imageId) {\n//       _id\n//       commentText\n//       commentAuthor\n//       createdAt\n//       comments {\n//         _id\n//         commentText\n//         createdAt\n//       }\n//     }\n//   }\n// `;\n","export const getSavedImageSrcs = () => {\n    const savedImageSrcs = localStorage.getItem('saved_images')\n      ? JSON.parse(localStorage.getItem('saved_images'))\n      : [];\n  \n    return savedImageSrcs;\n  };\n  \n  export const saveImageSrcs = (imageSrcArr) => {\n    if (imageSrcArr.length) {\n      localStorage.setItem('saved_images', JSON.stringify(imageSrcArr));\n    } else {\n      localStorage.removeItem('saved_images');\n    }\n  };\n  \n  export const removeImageSrc = (imageSrc) => {\n    const savedImageSrcs = localStorage.getItem('saved_images')\n      ? JSON.parse(localStorage.getItem('saved_images'))\n      : null;\n  \n    if (!savedImageSrcs) {\n      return false;\n    }\n  \n    const updatedSavedImageSrcs = savedImageSrcs?.filter((savedImageSrc) => savedImageSrc !== imageSrc);\n    localStorage.setItem('saved_images', JSON.stringify(updatedSavedImageSrcs));\n  \n    return true;\n  };\n  ","import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumimageIdArrns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_IMAGE } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { removeImageSrc } from \"../utils/localStorage\";\n\nconst SavedImages = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || [];\n  const [removeImage] = useMutation(REMOVE_IMAGE);\n\n  // create function that accepts the image's mongo _id value as param and deletes the image from the database\n  const handleDeleteImage = async (imageId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeImage({\n        variables: { imageId },\n      });\n      // upon success, remove image's id from localStorage\n      removeImageSrc(imageId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved images</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedImages?.length\n            ? `Viewing ${userData.savedImages.length} saved ${\n                userData.savedImages.length === 1 ? \"image\" : \"images\"\n              }:`\n            : \"You have no saved images\"}\n        </h2>\n        <div className=\"masonry-with-columns\">\n          {userData.savedImages?.map((photo) => {\n            return (\n              <Card className=\"card\" key={photo.imageId}>\n                <Card.Img\n                  key={`${photo.imageId}`}\n                  src={`${photo.src}`}\n                  alt={`${photo.title}`}\n                  thumbnailheight={350}\n                  thumbnailwidth={350}\n                  caption={`${photo.title}`}\n                />\n                {\n                  <h4>{photo.title}</h4>\n                }\n                {\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteImage(photo.imageId)}\n                  >\n                    Delete this Image!\n                  </Button>\n                }\n              </Card>\n            );\n          })}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedImages;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport { saveImageSrcs, getSavedImageSrcs } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { SAVE_IMAGE } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst SearchedImages = () => {\n  // create state for holding returned google api data\n  const [searchedImages, setSearchedImages] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [prevSearchInput, setPrevSearchInput] = useState(\"\");\n\n  // create state to hold saved imageId values\n  const [savedImageSrcs, setSavedImageSrcs] = useState(getSavedImageSrcs());\n\n  // define the save image function from the mutation\n  const [saveImage, { error }] = useMutation(SAVE_IMAGE);\n  // set up useEffect hook to save `savedImageIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveImageSrcs(savedImageSrcs);\n  });\n\n  // create method to search for images and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    // const apiKey = \"8cc95ac0f29514284d94232a32a7c4c3\";\n    const apiKey = process.env.REACT_APP_API_KEY;\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(\n        `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${searchInput}&format=json&nojsoncallback=1`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const {\n        photos: { photo },\n      } = await response.json();\n\n      const imageData = photo.map((photo) => ({\n        imageId: photo.id,\n        title: photo.title,\n        caption: photo.title,\n        server: photo.server,\n        secret: photo.secret,\n        imageSrc: `https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`,\n      }));\n\n      setSearchedImages(imageData);\n      setPrevSearchInput(searchInput);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a image to our database\n  const handleSaveImage = async (imageSrc) => {\n    console.log(\"handleSaveImage: \", searchedImages);\n    console.log(\"imageSrc: \", imageSrc);\n    // find the image in `searchedImages` state by the matching id\n    const imageToSave = searchedImages.find(\n      (photo) => photo.imageSrc === imageSrc\n    );\n    console.log(\"imageToSave: \", imageToSave);\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n    console.log(\"VALIDATED LOGGING IN\");\n    try {\n      const { data } = await saveImage({\n        variables: { ...imageToSave },\n      });\n      console.log(\"RECEIVED DATA\");\n      console.log(data);\n      console.log(savedImageSrcs);\n      // if image successfully saves to user's account, save image id to state\n      setSavedImageSrcs([...savedImageSrcs, imageToSave.imageSrc]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Images!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for an image\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {searchedImages.length\n            ? `Viewing ${searchedImages.length} results for ${prevSearchInput}:`\n            : \"\"}\n        </h2>\n\n        <div className=\"masonry-with-columns\">\n          {searchedImages.map((photo) => {\n            return (\n              <Card className=\"card\" key={photo.imageId}>\n                <Card.Img\n                  key={`${photo.imageId}`}\n                  src={`https://live.staticflickr.com/${photo.server}/${photo.imageId}_${photo.secret}.jpg`}\n                  alt={`${photo.title}`}\n                  thumbnailheight={350}\n                  thumbnailwidth={350}\n                  caption={`${photo.title}`}\n                />\n                {<h4>{photo.src}</h4>}\n                {Auth.loggedIn() && (\n                  <Button\n                    disabled={savedImageSrcs?.some(\n                      (savedImageSrc) => savedImageSrc === photo.imageSrc\n                    )}\n                    className=\"btn-block btn-info\"\n                    onClick={() => handleSaveImage(photo.imageSrc)}\n                  >\n                    {savedImageSrcs?.some(\n                      (savedImageSrc) => savedImageSrc === photo.imageSrc\n                    )\n                      ? \"This image has already been saved!\"\n                      : \"Save this Image!\"}\n                  </Button>\n                )}\n              </Card>\n            );\n          })}\n        </div>\n      </Container>\n    </>\n  );\n};\nexport default SearchedImages;\n","import React from 'react';\n// import {\n//   Jumbotron,\n//   Container,\n//   CardColumimageIdArrns,\n//   Card,\n//   Button,\n// } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\n\nconst ImageList = ({ users, title  }) => {\n \n\n    if (!users.length) {\n    return <h3>No Saved images Yet</h3>;\n  }\n\n  return (\n  \n    <div>\n    <h3 className=\"text-primary\">{title}</h3>\n    <div className=\"flex-row justify-space-between my-4\">\n      \n      \n        {users &&\n          users.map((user) => (\n            <div key={users._id} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                  {user.username} <br />\n                  <span className=\"text-white\" style={{ fontSize: '1rem' }}>\n                    currently has {user.savedImages ? user.savedImages.length : 0}{' '}\n                    image \n                    {user.savedImages && user.savedImages.length === 1 ? '' : 's'} saved\n                  </span>\n                </h4>\n                <Link\n                  className=\"btn btn-block btn-squared btn-light text-dark\"\n                  to={`/users/${user._id}`}\n                >\n                  View and share comments on {user.username}'s images.\n                </Link>\n              </div>\n              </div>\n          ))}\n      </div>\n      </div>\n \n  );\n};\nexport default ImageList;\n\n","import React from 'react';\nimport LikeButton from './LikeButton';\n\nfunction Photo(props) {\n  return (\n    <div className=\"photo\">\n      <img src={props.src} alt={props.alt} />\n      <LikeButton />\n    </div>\n  );\n}\n\nexport default Photo;\n","import React, { useState } from \"react\";\nimport props from \"./LikePhoto\";\n\nfunction LikeButton() {\n  const [liked, setLiked] = useState(false);\n\n  const handleClick = () => {\n    setLiked(!liked);\n    console.log(`User ${props.userId} liked photo ${props.photoId}`);\n  };\n\n  const buttonStyle = {\n    backgroundColor: liked ? \"salmon\" : \"skyblue\",\n    color: \"white\",\n    borderRadius: \"8px\",\n    padding: \"8px 16px\",\n    border: \"none\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <button style={buttonStyle} onClick={handleClick}>\n      {liked ? \"Love-it!!:}\" : \"Like this image\"}\n    </button>\n  );\n}\n\nexport default LikeButton;\n","import React from 'react';\nimport ImageList from '../components/ImageList';\nimport { Container, Button, Card } from \"react-bootstrap\";\nimport { useQuery } from \"@apollo/react-hooks\";\n// import { QUERY_USERS} from \"../utils/queries\";\nimport { QUERY_ALL_IMAGES } from \"../utils/queries\";\nimport UserNav from \"../components/ImageAndUserNav\"; \nimport LikeButton from './LikeButton';\n\n// use this page to display query/resolver of ALL saved images on DB\n\nconst AllSavedImages = () => {\n\n    // const { loading, data } = useQuery(QUERY_USERS);\n    const { loading, data } = useQuery(QUERY_ALL_IMAGES);\n    console.log('Hello', data);\n    const users = data?.users || [];\n    console.log('users: ', users);\n    const allImages = [];\n    for (let i=0; i < users.length; i++) {\n      allImages.push((users[i].savedImages))\n    }\n    console.log('allImages: ', allImages.flat());\n    const images = allImages.flat();\n    console.log('images: ', images);\n\n    return (\n      <>\n      {/* <Container>\n      <UserNav />\n</Container> */}\n        <main>\n          <div className=\"flex-row justify-center\">\n            <div className=\"col-12 col-md-10 my-3\">\n              {loading ? (\n                <div>Loading...</div>\n              ) : (\n                // <ImageList\n                //   users={users}\n                //   title=\"See what inspires other users...\"\n                // />\n                <Container>\n                <h2>\n                  {images.length\n                    ? `Viewing ${images.length} results:`\n                    : \"\"}\n                </h2>\n        \n                <div className=\"masonry-with-columns\">\n                  {images.map((photo) => {\n                    return (\n                      <Card className=\"card\" key={photo.imageId}>\n                        <Card.Img\n                          key={`${photo.imageId}`}\n                          src={`${photo.src}`}\n                          alt={`${photo.title}`}\n                          thumbnailheight={350}\n                          thumbnailwidth={350}\n                          caption={`${photo.title}`}\n                        />\n                        {}\n\n\n\n                    \n                <LikeButton\n                    className=\"btn-block btn-danger\"\n                    //make this button red\n                    // disabled={savedImageIds?.some(\n\n                    // onClick={() => handleDeleteImage(photo.imageId)}\n                    onClick={() => alert(`Liked ${photo.title}` )}\n                    onclick={() => console.log(`Liked ${photo.title}` )}\n                  >\n                    Like this Image!\n                  </LikeButton>\n                \n                      </Card>\n                    );\n                  })}\n                </div>\n              </Container>\n\n                \n              )}\n            </div>\n          </div>\n        </main>\n        </>\n      );\n    };\n    \n    export default AllSavedImages;\n    ","import React from 'react';\nimport ImageList from '../components/ImageList';\nimport { Container,  Card } from \"react-bootstrap\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_USERS} from \"../utils/queries\";\nimport UserNav from \"../components/ImageAndUserNav\"; \n\nconst AllSavedUsers = () => {\n\n    const { loading, data } = useQuery(QUERY_USERS);\n    const users = data?.users || [];\n\n    return (\n      <>\n      {/* <UserNav /> */}\n        <main>\n          <div className=\"flex-row justify-center\">\n            <div className=\"col-12 col-md-10 my-3\">\n              {loading ? (\n                <div>Loading...</div>\n              ) : (\n                <ImageList\n                  users={users}\n                  title=\"See what inspires other users...\"\n                />\n              )}\n            </div>\n          </div>\n        </main>\n        </>\n      );\n    };\n\n    export default AllSavedUsers;\n","import React from 'react';\n\nconst CommentsList = ({ comments }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-space-between my-4\">\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment} className=\"col-12 col-xl-6\">\n              <div className=\"card mb-3\">\n                <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                  {comment} <br />\n                </h4>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentsList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst CommentForm = ({ userId }) => {\n  const [comment, setComment] = useState('');\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const data = await addComment({\n        variables: { userId, comment },\n      });\n\n      setComment('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Add some more comments below.</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}\n        >\n          <div className=\"col-12 col-lg-9\">\n            <input\n              placeholder=\"Add some comments...\"\n              value={comment}\n              className=\"form-input w-100\"\n              onChange={(event) => setComment(event.target.value)}\n            />\n          </div>\n\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n              Add Comment\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              {error.message}\n            </div>\n          )}\n        </form>\n      ) : (\n        <p>\n          You need to be logged in to add comments. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport {\n  Jumbotron,\n  Container,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentsList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_USER } from '../utils/queries';\n\n\nconst SingleUser = () => {\n  const { userId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_USER, {\n    variables: { userId: userId },\n  });\n\n  const user = data?.user || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n    <Jumbotron fluid className=\"text-light bg-dark\">\n      <Container>\n        <h1>Viewing {user.username} saved images</h1>\n      </Container>\n    </Jumbotron>\n    <Container>\n    <h2>\n          {user.savedImages?.length\n            ? `Viewing ${user.savedImages.length} saved ${\n              user.savedImages.length === 1 ? \"image\" : \"images\"\n              }:`\n            : \"You have no saved images\"}\n        </h2>\n        <div className=\"masonry-with-columns\">\n          {user.savedImages?.map((photo) => {\n            return (\n              <Card className=\"card\" key={photo.imageId}>\n                <Card.Img\n                  key={`${photo.imageId}`}\n                  src={`${photo.src}`}\n                  alt={`${photo.title}`}\n                  thumbnailheight={350}\n                  thumbnailwidth={350}\n                  caption={`${photo.title}`}\n                />\n                {\n                  <h4>{photo.title}</h4>\n                }\n              </Card>\n            );\n          })}\n        </div>\n    </Container>\n    <Container>\n    <div>\n      <h2 className=\"card-header\">\n        {user.username}'s friends have comment on their image...\n      </h2>\n\n      {user.comments?.length > 0 && <CommentsList comments={user.comments} />}\n\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <CommentForm userId={user._id} />\n      </div>\n    </div>\n    </Container>\n    </>\n  );\n};\n\nexport default SingleUser;\n","import React from \"react\";\n\nconst PicturePost = () => {\n  return (\n    <div className=\"card\">\n      <img alt=\"sample photo\" src=\"https://picsum.photos/600/400\" />\n      <h3>Title of Photo</h3>\n      {/* <h3>{photo.title}</h3> */}\n      <p>Short description of photo and destination</p>\n      {/* <p>{photo.description}</p> */}\n      {/* <p>by {photo.user} on {photo.date}</p> */}\n      <p>by Username on today's date</p>\n    </div>\n  );\n};\n\nexport default PicturePost;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport './App.css';\n// import FlickrPhotos from \"./components/flickr\";\nimport AppNavbar from './components/navbar';\n// import Gallery from './components/Gallery';\nimport SavedImages from \"./pages/SavedImages\";\nimport SearchedImages from \"./pages/SearchedImages\";\nimport AllSavedImages from \"./pages/AllSavedImages\";\nimport UserList from \"./pages/UserList\";\nimport SingleUser from \"./pages/SingleUser\";\n// import Cloud from './components/cloud';\n\n// import { CloudinaryContext, Transformation, Image } from 'cloudinary-react';\n// import axios from 'axios';\nimport PicturePost from './components/picturePost';\nimport {ApolloClient, ApolloProvider, InMemoryCache, createHttpLink,} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <>\n    <AppNavbar />\n    <PicturePost />\n    {/* <FlickrPhotos /> */}\n    {/* <Cloud /> */}\n    {/* <Gallery /> */}\n    <Routes>\n            <Route path=\"/\" element={<SearchedImages />} />\n            <Route path=\"/saved\" element={<SavedImages />} />\n            <Route path=\"/allsaved\" element={<AllSavedImages />} />\n            <Route path=\"/allusers\" element={<UserList />} />\n            <Route path=\"/users/:userId\" element={<SingleUser />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"display-2\">Wrong page!</h1>}\n            />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}